/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 *    Copyright 2023 (c) Fraunhofer IOSB (Author: Florian DÃ¼wel)
 */


windows build:

1 #define YY_INPUT(yyctx, buf, result, max_size) \
2 {                                              \
3  if(yyctx->input.length <= yyctx->pos) {      \
4      result = 0;                              \
5  } else {                                     \
6      result = ((int) yyctx->input.length) - yyctx->pos;\
7      if(result > max_size)                     \
8          result = max_size;                   \
9      memcpy(buf, &yyctx->input.data[yyctx->pos], result); \
10      yyctx->pos += result;                    \
11  }                                            \
12}

replace: yyctx->input.length with  ((int) yyctx->input.length) in line 6


13 YY_LOCAL(void) yyPush(yycontext *yy, char *text, int count)
14 {
15   yy->__val += count;
16   while (yy->__valslen <= yy->__val - yy->__vals)
17     {
18       long offset= (long)( yy->__val - yy->__vals);
19       yy->__valslen *= 2;
20       yy->__vals= (YYSTYPE *)YY_REALLOC(yy, yy->__vals, sizeof(YYSTYPE) * yy->__valslen);
21       yy->__val= yy->__vals + offset;
22     }
23 }

replace: long offset= yy->__val - yy->__vals; with long offset= (long)( yy->__val - yy->__vals); in line 18

linux build:

replace YY_PARSE(int) YYPARSEFROM(YY_CTX_PARAM_ yyrule yystart) with YY_PARSE(static int) YYPARSEFROM(YY_CTX_PARAM_ yyrule yystart)

replace YY_PARSE(int) YYPARSE(YY_CTX_PARAM) with YY_PARSE(static int) YYPARSE(YY_CTX_PARAM)

replace YY_PARSE(yycontext *) YYRELEASE(yycontext *yyctx) with YY_PARSE(static yycontext *) YYRELEASE(yycontext *yyctx)

remove:
YY_LOCAL(int) yyAccept(yycontext *yy, int tp0)
{
  if (tp0)
    {
      fprintf(stderr, "accept denied at %d\n", tp0);
      return 0;
    }
  else
    {
      yyDone(yy);
      yyCommit(yy);
    }
  return 1;
}