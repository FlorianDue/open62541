eventFilter = selectClauses, contentFilter;
selectClauses = "SELECT",  {simpleAttributeOperand, ","}, simpleAttributeOperand ;
contentFilter = whereClause, [forClause];
whereClause = "WHERE", (operator | elementReference);
elementReference = "$", ("String" | "Number") ;
operator = singleOperandOperator | twoOperandsOperator | betweenOperator | InListOperator | branchOperator;
branchOperator = ("AND" | "OR"), "(", operand, ",", operand, ")";
twoOperandsOperator = operand, twoOperandsOperatorReference, operand;
singleOperandOperator = ofType | isNull | not;
twoOperandsOperatorReference = greatherThan | equals | lessThan | greaterOrEqual | lessOrEqual | like | cast | bitAnd |bitOr;
greatherThan = "GREATERTHAN" | ">" | "GT";
equals = "EQUALS" | "EQ" | '"', "==",'"';
lessThan = "LESSTHAN" | "LT" | "<";
greaterOrEqual = "GREATEROREQUAL" | '"', ">=",'"' | "GE";
lessOrEqual = "LESSOREQUAL" | "LE" |'"', "<=",'"';
like = "LIKE" |  '"', "<=>",'"';
cast = "CAST" | "->";
bitAnd = "BITAND" | "&";
bitOr = "BITOR" | "v";
ofType = "OFTYPE", (operand | "NodeId");
isNull = ("ISNULL" | "0="), operand;
not = ("NOT" | "!"), operand;
betweenOperator = operand , "BETWEEN" , "[" , operand , "," , operand , "]";
InListOperator = operand, "INLIST", "[" , {operand, ","}, operand, "]";
operand = simpleAttributeOperand | literalOperand | elementOperand;
elementOperand = elementReference;
simpleAttributeOperand = ["TYPEID", "NodeId"], "PATH",  '"', "relativePath",  '"', ["ATTRIBUTE", "Number"], ["INDEX", "IndexRange"];
literalOperand = "JsonString" | literal;
literal =    "INT32", "Number" | ("STRING", '"', "String",  '"' | '"', "String",  '"') | ("BOOL", ("True" | "true" | "false" | "False" | "1" | "0")
           | ("True" | "true" | "false" | "False")) | "INT16", "Number" | ("INT64", "Number" | "Number") | "UINT16", "Number" | "UINT32", "Number"
           | "UINT64", "Number" | ("DOUBLE", "floating point" | "floating point") | "FLOAT", "floating point" | ("NODEID", NodeId | NodeId) | "SBYTE", ( {"-" | "Number"})
           | "BYTE", "Number" | "TIME", "TimeValueString" | "GUID", "GUID-String" | "BSTRING",  '"', "String",  '"' | "STATUSCODE", ( '"', "String",  '"' | "Number")
           | "EXPNODEID",  '"', "String",  '"'  | ("QNAME", '"', "relativePathElement",  '"' | '"', "relativePathElement",  '"') | "LOCALIZED",  '"', "String", '"' ;
forClause = "FOR", referencedElement, {referencedElement};
referencedElement = elementReference, ":=", (operand | operator);
NodeId = [NamespaceIndex], ("s=", '"', "String", '"' | "i=","Number" | "b=",'"', "ByteString", '"' | "g=","Guid" );
NamespaceIndex = "ns=", "Number", ";";